* chttps

Chttps is an implementation of a TCP/IP + TLS
server accepting the http/1.1 protocol as defined
in RFC 2616, somewhat similar to the Apache web server.
A secondary goal for the project is to implement
a server-side rendering engine.

The server uses UNIX sockets to handle multiple
TCP connections, using the OpenSSH library for TLS:
the server creates a new UNIX thread for each connection.
While this is a simple and straight forward approach, It does not
scale to a high number of sessions as an UNIX thread
Is an expensive resource. Nginx uses a master-slave
architecture via a signal oriented design, however the
implementation is more involved. The first version
of this server will leverage on threads alone to
handle sessions.

Chttps is designed with modularity in mind. A request
from a client goes through multiple configurable
passes to allow greater modularity and customizability.

** SSR

The server-side-rendering module will parse .ssr
files, where code is delimited by the characters
"%{" to open and "}%" to close, as shown in the
following example:

#+BEGIN_SRC html
<body>
    %{ for(int i = 0; i < 10; ++i) { }%
        <p> Iteration No. %{ INT(i) }% </p>
    %{ } }%
</body>
#+END_SRC

* Build

The project currently uses a Makefile but will soon transition
Its build system to Autoconf. For the mean time, run make to
build both the library and the daemon

#+BEGIN_SRC bash
make
#+END_SRC bash

To run self tests, run the following:

#+BEGIN_SRC bash
make check
#+END_SRC bash
